version: '3'

services:
  # --- General services
  caddy:
    image: caddy/caddy:alpine
    restart: on-failure
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
    ports:
      - 127.0.0.1:80:80
      - 127.0.0.1:443:443

  postgresql:
    image: postgres:12-alpine
    restart: on-failure
    ports:
      - 127.0.0.1:5432:5432
    environment:
      - POSTGRES_USER=formol
      - POSTGRES_PASSWORD=ReallyBadPwd
      - POSTGRES_DB=formol
    volumes:
      - ./docker/volumes/psql12:/var/lib/postgresql/data

  redis:
    image: redis:5-alpine
    restart: on-failure

  minio:
    image: minio/minio
    command: minio server /data --address [::]:9000
    restart: on-failure
    depends_on:
      - caddy
    volumes:
      - ./docker/volumes/minio:/data
    ports:
      - 127.0.0.1:9000:9000
    networks:
      default:
        aliases:
          - s3.formol.dev

  # --- Formol services

  # Dashboard
  dashboard:
    build: app-dashboard
    restart: on-failure
    # environment:
    #   - NODE_ENV=PRODUCTION
    depends_on:
      - caddy
    links:
      - api:api.formol.dev
    volumes:
      - ./app-dashboard:/opt/formol
    networks:
      default:
        aliases:
          - dashboard.formol.dev

  # API
  api:
    build: api-server
    restart: on-failure
    # environment:
    #   - NODE_ENV=PRODUCTION
    depends_on:
      - caddy
      - backend
    links:
      - postgresql:psql.formol.dev
      - redis:redis.formol.dev
    volumes:
      - ./api-server:/opt/formol
    networks:
      default:
        aliases:
          - api.formol.dev

  # Backend Poll generator
  backend:
    build: backend-poll-generator
    restart: on-failure
    depends_on:
      - caddy
    links:
      - redis:redis.formol.dev
      - minio:s3.formol.dev
    volumes:
      - ./backend-poll-generator:/opt/formol

networks:
  default:
